/*
TTE Service

This API is used for sending whatsapp via API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk-esign-service

import (
	"encoding/json"
)

// checks if the EsignResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsignResult{}

// EsignResult struct for EsignResult
type EsignResult struct {
	Id *string `json:"id,omitempty"`
	Layanan *string `json:"layanan,omitempty"`
	RefCode *string `json:"ref_code,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	FileLink *string `json:"file_link,omitempty"`
	EsignDetails *EsignDetails `json:"esign_details,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewEsignResult instantiates a new EsignResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsignResult() *EsignResult {
	this := EsignResult{}
	return &this
}

// NewEsignResultWithDefaults instantiates a new EsignResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsignResultWithDefaults() *EsignResult {
	this := EsignResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EsignResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EsignResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EsignResult) SetId(v string) {
	o.Id = &v
}

// GetLayanan returns the Layanan field value if set, zero value otherwise.
func (o *EsignResult) GetLayanan() string {
	if o == nil || IsNil(o.Layanan) {
		var ret string
		return ret
	}
	return *o.Layanan
}

// GetLayananOk returns a tuple with the Layanan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetLayananOk() (*string, bool) {
	if o == nil || IsNil(o.Layanan) {
		return nil, false
	}
	return o.Layanan, true
}

// HasLayanan returns a boolean if a field has been set.
func (o *EsignResult) HasLayanan() bool {
	if o != nil && !IsNil(o.Layanan) {
		return true
	}

	return false
}

// SetLayanan gets a reference to the given string and assigns it to the Layanan field.
func (o *EsignResult) SetLayanan(v string) {
	o.Layanan = &v
}

// GetRefCode returns the RefCode field value if set, zero value otherwise.
func (o *EsignResult) GetRefCode() string {
	if o == nil || IsNil(o.RefCode) {
		var ret string
		return ret
	}
	return *o.RefCode
}

// GetRefCodeOk returns a tuple with the RefCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetRefCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RefCode) {
		return nil, false
	}
	return o.RefCode, true
}

// HasRefCode returns a boolean if a field has been set.
func (o *EsignResult) HasRefCode() bool {
	if o != nil && !IsNil(o.RefCode) {
		return true
	}

	return false
}

// SetRefCode gets a reference to the given string and assigns it to the RefCode field.
func (o *EsignResult) SetRefCode(v string) {
	o.RefCode = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *EsignResult) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *EsignResult) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *EsignResult) SetFileName(v string) {
	o.FileName = &v
}

// GetFileLink returns the FileLink field value if set, zero value otherwise.
func (o *EsignResult) GetFileLink() string {
	if o == nil || IsNil(o.FileLink) {
		var ret string
		return ret
	}
	return *o.FileLink
}

// GetFileLinkOk returns a tuple with the FileLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetFileLinkOk() (*string, bool) {
	if o == nil || IsNil(o.FileLink) {
		return nil, false
	}
	return o.FileLink, true
}

// HasFileLink returns a boolean if a field has been set.
func (o *EsignResult) HasFileLink() bool {
	if o != nil && !IsNil(o.FileLink) {
		return true
	}

	return false
}

// SetFileLink gets a reference to the given string and assigns it to the FileLink field.
func (o *EsignResult) SetFileLink(v string) {
	o.FileLink = &v
}

// GetEsignDetails returns the EsignDetails field value if set, zero value otherwise.
func (o *EsignResult) GetEsignDetails() EsignDetails {
	if o == nil || IsNil(o.EsignDetails) {
		var ret EsignDetails
		return ret
	}
	return *o.EsignDetails
}

// GetEsignDetailsOk returns a tuple with the EsignDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetEsignDetailsOk() (*EsignDetails, bool) {
	if o == nil || IsNil(o.EsignDetails) {
		return nil, false
	}
	return o.EsignDetails, true
}

// HasEsignDetails returns a boolean if a field has been set.
func (o *EsignResult) HasEsignDetails() bool {
	if o != nil && !IsNil(o.EsignDetails) {
		return true
	}

	return false
}

// SetEsignDetails gets a reference to the given EsignDetails and assigns it to the EsignDetails field.
func (o *EsignResult) SetEsignDetails(v EsignDetails) {
	o.EsignDetails = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *EsignResult) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsignResult) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *EsignResult) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *EsignResult) SetMessage(v string) {
	o.Message = &v
}

func (o EsignResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsignResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Layanan) {
		toSerialize["layanan"] = o.Layanan
	}
	if !IsNil(o.RefCode) {
		toSerialize["ref_code"] = o.RefCode
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileLink) {
		toSerialize["file_link"] = o.FileLink
	}
	if !IsNil(o.EsignDetails) {
		toSerialize["esign_details"] = o.EsignDetails
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableEsignResult struct {
	value *EsignResult
	isSet bool
}

func (v NullableEsignResult) Get() *EsignResult {
	return v.value
}

func (v *NullableEsignResult) Set(val *EsignResult) {
	v.value = val
	v.isSet = true
}

func (v NullableEsignResult) IsSet() bool {
	return v.isSet
}

func (v *NullableEsignResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsignResult(val *EsignResult) *NullableEsignResult {
	return &NullableEsignResult{value: val, isSet: true}
}

func (v NullableEsignResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsignResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


