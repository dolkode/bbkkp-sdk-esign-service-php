/*
TTE Service

This API is used for sending whatsapp via API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk-esign-service

import (
	"encoding/json"
)

// checks if the InfoSigner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfoSigner{}

// InfoSigner struct for InfoSigner
type InfoSigner struct {
	IssuerDn *string `json:"issuer_dn,omitempty"`
	SignerName *string `json:"signer_name,omitempty"`
	SignerCertValidity *string `json:"signer_cert_validity,omitempty"`
	SignerDn *string `json:"signer_dn,omitempty"`
	CertUserCertified *bool `json:"cert_user_certified,omitempty"`
}

// NewInfoSigner instantiates a new InfoSigner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfoSigner() *InfoSigner {
	this := InfoSigner{}
	return &this
}

// NewInfoSignerWithDefaults instantiates a new InfoSigner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoSignerWithDefaults() *InfoSigner {
	this := InfoSigner{}
	return &this
}

// GetIssuerDn returns the IssuerDn field value if set, zero value otherwise.
func (o *InfoSigner) GetIssuerDn() string {
	if o == nil || IsNil(o.IssuerDn) {
		var ret string
		return ret
	}
	return *o.IssuerDn
}

// GetIssuerDnOk returns a tuple with the IssuerDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoSigner) GetIssuerDnOk() (*string, bool) {
	if o == nil || IsNil(o.IssuerDn) {
		return nil, false
	}
	return o.IssuerDn, true
}

// HasIssuerDn returns a boolean if a field has been set.
func (o *InfoSigner) HasIssuerDn() bool {
	if o != nil && !IsNil(o.IssuerDn) {
		return true
	}

	return false
}

// SetIssuerDn gets a reference to the given string and assigns it to the IssuerDn field.
func (o *InfoSigner) SetIssuerDn(v string) {
	o.IssuerDn = &v
}

// GetSignerName returns the SignerName field value if set, zero value otherwise.
func (o *InfoSigner) GetSignerName() string {
	if o == nil || IsNil(o.SignerName) {
		var ret string
		return ret
	}
	return *o.SignerName
}

// GetSignerNameOk returns a tuple with the SignerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoSigner) GetSignerNameOk() (*string, bool) {
	if o == nil || IsNil(o.SignerName) {
		return nil, false
	}
	return o.SignerName, true
}

// HasSignerName returns a boolean if a field has been set.
func (o *InfoSigner) HasSignerName() bool {
	if o != nil && !IsNil(o.SignerName) {
		return true
	}

	return false
}

// SetSignerName gets a reference to the given string and assigns it to the SignerName field.
func (o *InfoSigner) SetSignerName(v string) {
	o.SignerName = &v
}

// GetSignerCertValidity returns the SignerCertValidity field value if set, zero value otherwise.
func (o *InfoSigner) GetSignerCertValidity() string {
	if o == nil || IsNil(o.SignerCertValidity) {
		var ret string
		return ret
	}
	return *o.SignerCertValidity
}

// GetSignerCertValidityOk returns a tuple with the SignerCertValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoSigner) GetSignerCertValidityOk() (*string, bool) {
	if o == nil || IsNil(o.SignerCertValidity) {
		return nil, false
	}
	return o.SignerCertValidity, true
}

// HasSignerCertValidity returns a boolean if a field has been set.
func (o *InfoSigner) HasSignerCertValidity() bool {
	if o != nil && !IsNil(o.SignerCertValidity) {
		return true
	}

	return false
}

// SetSignerCertValidity gets a reference to the given string and assigns it to the SignerCertValidity field.
func (o *InfoSigner) SetSignerCertValidity(v string) {
	o.SignerCertValidity = &v
}

// GetSignerDn returns the SignerDn field value if set, zero value otherwise.
func (o *InfoSigner) GetSignerDn() string {
	if o == nil || IsNil(o.SignerDn) {
		var ret string
		return ret
	}
	return *o.SignerDn
}

// GetSignerDnOk returns a tuple with the SignerDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoSigner) GetSignerDnOk() (*string, bool) {
	if o == nil || IsNil(o.SignerDn) {
		return nil, false
	}
	return o.SignerDn, true
}

// HasSignerDn returns a boolean if a field has been set.
func (o *InfoSigner) HasSignerDn() bool {
	if o != nil && !IsNil(o.SignerDn) {
		return true
	}

	return false
}

// SetSignerDn gets a reference to the given string and assigns it to the SignerDn field.
func (o *InfoSigner) SetSignerDn(v string) {
	o.SignerDn = &v
}

// GetCertUserCertified returns the CertUserCertified field value if set, zero value otherwise.
func (o *InfoSigner) GetCertUserCertified() bool {
	if o == nil || IsNil(o.CertUserCertified) {
		var ret bool
		return ret
	}
	return *o.CertUserCertified
}

// GetCertUserCertifiedOk returns a tuple with the CertUserCertified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoSigner) GetCertUserCertifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.CertUserCertified) {
		return nil, false
	}
	return o.CertUserCertified, true
}

// HasCertUserCertified returns a boolean if a field has been set.
func (o *InfoSigner) HasCertUserCertified() bool {
	if o != nil && !IsNil(o.CertUserCertified) {
		return true
	}

	return false
}

// SetCertUserCertified gets a reference to the given bool and assigns it to the CertUserCertified field.
func (o *InfoSigner) SetCertUserCertified(v bool) {
	o.CertUserCertified = &v
}

func (o InfoSigner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfoSigner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssuerDn) {
		toSerialize["issuer_dn"] = o.IssuerDn
	}
	if !IsNil(o.SignerName) {
		toSerialize["signer_name"] = o.SignerName
	}
	if !IsNil(o.SignerCertValidity) {
		toSerialize["signer_cert_validity"] = o.SignerCertValidity
	}
	if !IsNil(o.SignerDn) {
		toSerialize["signer_dn"] = o.SignerDn
	}
	if !IsNil(o.CertUserCertified) {
		toSerialize["cert_user_certified"] = o.CertUserCertified
	}
	return toSerialize, nil
}

type NullableInfoSigner struct {
	value *InfoSigner
	isSet bool
}

func (v NullableInfoSigner) Get() *InfoSigner {
	return v.value
}

func (v *NullableInfoSigner) Set(val *InfoSigner) {
	v.value = val
	v.isSet = true
}

func (v NullableInfoSigner) IsSet() bool {
	return v.isSet
}

func (v *NullableInfoSigner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfoSigner(val *InfoSigner) *NullableInfoSigner {
	return &NullableInfoSigner{value: val, isSet: true}
}

func (v NullableInfoSigner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfoSigner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


