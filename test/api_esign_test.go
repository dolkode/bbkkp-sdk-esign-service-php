/*
TTE Service

Testing EsignAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sdk-esign-service

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/aldinokemal/bbkkp-sdk-esign-service-php"
)

func Test_sdk-esign-service_EsignAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EsignAPIService ApiEsignNikNikGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nik string

		resp, httpRes, err := apiClient.EsignAPI.ApiEsignNikNikGet(context.Background(), nik).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EsignAPIService ApiEsignSignPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EsignAPI.ApiEsignSignPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EsignAPIService ApiEsignVerifyDocPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EsignAPI.ApiEsignVerifyDocPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EsignAPIService ApiEsignVerifyIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EsignAPI.ApiEsignVerifyIdGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
